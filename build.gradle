buildscript {
    repositories {
      mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

jar {
    baseName = 'springbootthymepostgresdocker'
    version =  '0.1.0'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator:+")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:+")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:+")
    compile("org.springframework.boot:spring-boot-starter-web:+")
	compile("org.postgresql:postgresql:+")
    compile("org.apache.commons:commons-lang3:3.4")
    compile("org.slf4j:slf4j-api:1.7.21")

    /* test dependencies */
    testCompile("org.springframework.boot:spring-boot-starter-test:+")
    testCompile("org.hsqldb:hsqldb:+")
    testCompile("com.jayway.jsonpath:json-path-assert:+")
}

/* Code style checks */

check.dependsOn 'checkstyle', 'pmd'

checkstyle {
  configFile rootProject.file('conf/checkstyle-config.xml')
  ignoreFailures true
  showViolations false
  toolVersion = '6.10.1'
}

task checkstyle(type: Checkstyle) {
  classpath = files()
  include '**/*.java','**/*.properties','**/*.xml'
  exclude '**/build/**'
  source 'src'
}

pmd {
  consoleOutput true
  ignoreFailures false
  toolVersion '5.5.1'
}

task pmdSrc(type: Pmd) {
  include '**/*.java'
  exclude '**/build/**'
  ruleSetFiles = rootProject.files('conf/pmd-base-ruleset.xml', 'conf/pmd-src-ruleset.xml')
  source 'src/main'
}

task pmdTestSrc(type: Pmd) {
  include '**/*.java'
  exclude '**/build/**'
  ruleSetFiles = rootProject.files('conf/pmd-base-ruleset.xml', 'conf/pmd-test-ruleset.xml')
  source 'src/test'
}

task pmd(dependsOn: ['pmdSrc', 'pmdTestSrc'])
